package de.hska.awp.palaver2.mitarbeiterverwaltung.domain;

// Generated 21.04.2013 16:08:42 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import de.hska.awp.palaver2.dienstplanverwaltung.domain.Schichtplan;
import de.hska.awp.palaver2.menueplanverwaltung.domain.Menue;
import de.hska.awp.palaver2.nachrichtenverwaltung.domain.Nachricht;

/**
 * Mitarbeiter generated by hbm2java
 */
@Entity
@Table(name = "mitarbeiter", catalog = "palaver")
public class Mitarbeiter implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = -590239735735958622L;
	private Long id;
	private String name;
	private String vorname;
	private String email;
	private String passwort;
	private String eintrittsdatum;
	private String austrittsdatum;
	private Set<Schichtplan> schichtplans = new HashSet<Schichtplan>(0);
	private Set<Menue> menues = new HashSet<Menue>(0);
	private Set<Nachricht> nachrichtensForSenderFk = new HashSet<Nachricht>(
			0);
	private Set<Rollen> rollens = new HashSet<Rollen>(0);

	public Mitarbeiter() {
	}

	public Mitarbeiter(String name, String vorname) {
		this.name = name;
		this.vorname = vorname;
	}

	public Mitarbeiter(String name, String vorname, String email,
			String passwort, String eintrittsdatum, String austrittsdatum,
			Set<Schichtplan> schichtplans, Set<Menue> menues,
			Set<Nachricht> nachrichtensForSenderFk, Set<Rollen> rollens) {
		this.name = name;
		this.vorname = vorname;
		this.email = email;
		this.passwort = passwort;
		this.eintrittsdatum = eintrittsdatum;
		this.austrittsdatum = austrittsdatum;
		this.schichtplans = schichtplans;
		this.menues = menues;
		this.nachrichtensForSenderFk = nachrichtensForSenderFk;
		this.rollens = rollens;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "vorname", nullable = false, length = 45)
	public String getVorname() {
		return this.vorname;
	}

	public void setVorname(String vorname) {
		this.vorname = vorname;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "passwort", length = 45)
	public String getPasswort() {
		return this.passwort;
	}

	public void setPasswort(String passwort) {
		this.passwort = passwort;
	}

	@Column(name = "eintrittsdatum", length = 45)
	public String getEintrittsdatum() {
		return this.eintrittsdatum;
	}

	public void setEintrittsdatum(String eintrittsdatum) {
		this.eintrittsdatum = eintrittsdatum;
	}

	@Column(name = "austrittsdatum", length = 45)
	public String getAustrittsdatum() {
		return this.austrittsdatum;
	}

	public void setAustrittsdatum(String austrittsdatum) {
		this.austrittsdatum = austrittsdatum;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mitarbeiter")
	public Set<Schichtplan> getSchichtplans() {
		return this.schichtplans;
	}

	public void setSchichtplans(Set<Schichtplan> schichtplans) {
		this.schichtplans = schichtplans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mitarbeiter")
	public Set<Menue> getMenues() {
		return this.menues;
	}

	public void setMenues(Set<Menue> menues) {
		this.menues = menues;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "mitarbeiterBySenderFk")
	public Set<Nachricht> getNachrichtensForSenderFk() {
		return this.nachrichtensForSenderFk;
	}

	public void setNachrichtensForSenderFk(
			Set<Nachricht> nachrichtensForSenderFk) {
		this.nachrichtensForSenderFk = nachrichtensForSenderFk;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "mitarbeiter_has_rollen", catalog = "palaver", joinColumns = { @JoinColumn(name = "mitarbeiter_mitarbeiternummer", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "rollen_id", nullable = false, updatable = false) })
	public Set<Rollen> getRollens() {
		return this.rollens;
	}

	public void setRollens(Set<Rollen> rollens) {
		this.rollens = rollens;
	}

}
