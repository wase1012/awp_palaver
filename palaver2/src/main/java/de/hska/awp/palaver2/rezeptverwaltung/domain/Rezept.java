package de.hska.awp.palaver2.rezeptverwaltung.domain;

// Generated 21.04.2013 16:08:42 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import de.hska.awp.palaver2.menueplanverwaltung.domain.Menue;

/**
 * Rezept generated by hbm2java
 */
@Entity
@Table(name = "rezept", catalog = "palaver", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Rezept implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = -4913397461270724132L;
	private Integer id;
	private Rezeptart rezeptart;
	private String name;
	private Set<Rezepteigenschaften> rezepteigenschaftens = new HashSet<Rezepteigenschaften>(
			0);
	private Set<Menue> menues = new HashSet<Menue>(0);
	private Set<RezeptHasArtikel> rezeptHasArtikels = new HashSet<RezeptHasArtikel>(
			0);

	public Rezept() {
	}

	public Rezept(Rezeptart rezeptart, String name) {
		this.rezeptart = rezeptart;
		this.name = name;
	}

	public Rezept(Rezeptart rezeptart, String name,
			Set<Rezepteigenschaften> rezepteigenschaftens, Set<Menue> menues,
			Set<RezeptHasArtikel> rezeptHasArtikels) {
		this.rezeptart = rezeptart;
		this.name = name;
		this.rezepteigenschaftens = rezepteigenschaftens;
		this.menues = menues;
		this.rezeptHasArtikels = rezeptHasArtikels;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rezeptart", nullable = false)
	public Rezeptart getRezeptart() {
		return this.rezeptart;
	}

	public void setRezeptart(Rezeptart rezeptart) {
		this.rezeptart = rezeptart;
	}

	@Column(name = "name", unique = true, nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "rezept_has_rezepteigenschaften", catalog = "palaver", joinColumns = { @JoinColumn(name = "rezept_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "rezepteigenschaften_id", nullable = false, updatable = false) })
	public Set<Rezepteigenschaften> getRezepteigenschaftens() {
		return this.rezepteigenschaftens;
	}

	public void setRezepteigenschaftens(
			Set<Rezepteigenschaften> rezepteigenschaftens) {
		this.rezepteigenschaftens = rezepteigenschaftens;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "menue_has_rezept", catalog = "palaver", joinColumns = { @JoinColumn(name = "rezept_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "menue_id", nullable = false, updatable = false) })
	public Set<Menue> getMenues() {
		return this.menues;
	}

	public void setMenues(Set<Menue> menues) {
		this.menues = menues;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rezept")
	public Set<RezeptHasArtikel> getRezeptHasArtikels() {
		return this.rezeptHasArtikels;
	}

	public void setRezeptHasArtikels(Set<RezeptHasArtikel> rezeptHasArtikels) {
		this.rezeptHasArtikels = rezeptHasArtikels;
	}

}
