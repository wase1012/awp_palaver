package de.hska.awp.palaver2.artikelverwaltung.domain;

// Generated 21.04.2013 16:08:42 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import de.hska.awp.palaver2.bestellverwaltung.domain.Bestellposition;
import de.hska.awp.palaver2.lieferantenverwaltung.domain.Lieferant;
import de.hska.awp.palaver2.rezeptverwaltung.domain.RezeptHasArtikel;

/**
 * Artikel generated by hbm2java
 */
@Entity
@Table(name = "artikel", catalog = "palaver")
public class Artikel implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 6557876739298794189L;
	private Integer id;
	private Mengeneinheit mengeneinheit;
	private Kategorie kategorie;
	private Lieferant lieferant;
	private String artikelnr;
	private String name;
	private Double bestellgroesse;
	private Float preis;
	private boolean bio;
	private boolean standard;
	private boolean grundbedarf;
	private Integer durchschnitt;
	private boolean lebensmittel;
	private Set<Bestellposition> bestellpositions = new HashSet<Bestellposition>(
			0);
	private Set<RezeptHasArtikel> rezeptHasArtikels = new HashSet<RezeptHasArtikel>(
			0);

	public Artikel() {
	}

	public Artikel(Mengeneinheit mengeneinheit, Kategorie kategorie,
			Lieferant lieferant, String name, boolean bio, boolean standard,
			boolean grundbedarf, boolean lebensmittel) {
		this.mengeneinheit = mengeneinheit;
		this.kategorie = kategorie;
		this.lieferant = lieferant;
		this.name = name;
		this.bio = bio;
		this.standard = standard;
		this.grundbedarf = grundbedarf;
		this.lebensmittel = lebensmittel;
	}

	public Artikel(Mengeneinheit mengeneinheit, Kategorie kategorie,
			Lieferant lieferant, String artikelnr, String name,
			Double bestellgroesse, Float preis, boolean bio, boolean standard,
			boolean grundbedarf, Integer durchschnitt, boolean lebensmittel,
			Set<Bestellposition> bestellpositions,
			Set<RezeptHasArtikel> rezeptHasArtikels) {
		this.mengeneinheit = mengeneinheit;
		this.kategorie = kategorie;
		this.lieferant = lieferant;
		this.artikelnr = artikelnr;
		this.name = name;
		this.bestellgroesse = bestellgroesse;
		this.preis = preis;
		this.bio = bio;
		this.standard = standard;
		this.grundbedarf = grundbedarf;
		this.durchschnitt = durchschnitt;
		this.lebensmittel = lebensmittel;
		this.bestellpositions = bestellpositions;
		this.rezeptHasArtikels = rezeptHasArtikels;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "mengeneinheit_fk", nullable = false)
	public Mengeneinheit getMengeneinheit() {
		return this.mengeneinheit;
	}

	public void setMengeneinheit(Mengeneinheit mengeneinheit) {
		this.mengeneinheit = mengeneinheit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "kategorie_fk", nullable = false)
	public Kategorie getKategorie() {
		return this.kategorie;
	}

	public void setKategorie(Kategorie kategorie) {
		this.kategorie = kategorie;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "lieferant_fk", nullable = false)
	public Lieferant getLieferant() {
		return this.lieferant;
	}

	public void setLieferant(Lieferant lieferant) {
		this.lieferant = lieferant;
	}

	@Column(name = "artikelnr", length = 45)
	public String getArtikelnr() {
		return this.artikelnr;
	}

	public void setArtikelnr(String artikelnr) {
		this.artikelnr = artikelnr;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "bestellgroesse", precision = 22, scale = 0)
	public Double getBestellgroesse() {
		return this.bestellgroesse;
	}

	public void setBestellgroesse(Double bestellgroesse) {
		this.bestellgroesse = bestellgroesse;
	}

	@Column(name = "preis", precision = 12, scale = 0)
	public Float getPreis() {
		return this.preis;
	}

	public void setPreis(Float preis) {
		this.preis = preis;
	}

	@Column(name = "bio", nullable = false)
	public boolean isBio() {
		return this.bio;
	}

	public void setBio(boolean bio) {
		this.bio = bio;
	}

	@Column(name = "standard", nullable = false)
	public boolean isStandard() {
		return this.standard;
	}

	public void setStandard(boolean standard) {
		this.standard = standard;
	}

	@Column(name = "grundbedarf", nullable = false)
	public boolean isGrundbedarf() {
		return this.grundbedarf;
	}

	public void setGrundbedarf(boolean grundbedarf) {
		this.grundbedarf = grundbedarf;
	}

	@Column(name = "durchschnitt")
	public Integer getDurchschnitt() {
		return this.durchschnitt;
	}

	public void setDurchschnitt(Integer durchschnitt) {
		this.durchschnitt = durchschnitt;
	}

	@Column(name = "lebensmittel", nullable = false)
	public boolean isLebensmittel() {
		return this.lebensmittel;
	}

	public void setLebensmittel(boolean lebensmittel) {
		this.lebensmittel = lebensmittel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "artikel")
	public Set<Bestellposition> getBestellpositions() {
		return this.bestellpositions;
	}

	public void setBestellpositions(Set<Bestellposition> bestellpositions) {
		this.bestellpositions = bestellpositions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "artikel")
	public Set<RezeptHasArtikel> getRezeptHasArtikels() {
		return this.rezeptHasArtikels;
	}

	public void setRezeptHasArtikels(Set<RezeptHasArtikel> rezeptHasArtikels) {
		this.rezeptHasArtikels = rezeptHasArtikels;
	}

}
