package de.bistrosoft.palaver.rezeptverwaltung.domain;

// Generated 25.04.2013 13:27:05 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import de.bistrosoft.palaver.artikelverwaltung.domain.Artikel;
import de.bistrosoft.palaver.artikelverwaltung.domain.Mengeneinheit;

/**
 * RezeptHasArtikel generated by hbm2java
 */
@Entity
@Table(name = "rezept_has_artikel", catalog = "palaver")
public class RezeptHasArtikel implements java.io.Serializable {

	private RezeptHasArtikelId id;
	private Artikel artikel;
	private Mengeneinheit mengeneinheit;
	private Rezept rezept;
	private BigDecimal menge;

	public RezeptHasArtikel() {
	}

	public RezeptHasArtikel(RezeptHasArtikelId id, Artikel artikel,
			Mengeneinheit mengeneinheit, Rezept rezept, BigDecimal menge) {
		this.id = id;
		this.artikel = artikel;
		this.mengeneinheit = mengeneinheit;
		this.rezept = rezept;
		this.menge = menge;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "rezeptFk", column = @Column(name = "rezept_fk", nullable = false)),
			@AttributeOverride(name = "artikelFk", column = @Column(name = "artikel_fk", nullable = false)) })
	public RezeptHasArtikelId getId() {
		return this.id;
	}

	public void setId(RezeptHasArtikelId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "artikel_fk", nullable = false, insertable = false, updatable = false)
	public Artikel getArtikel() {
		return this.artikel;
	}

	public void setArtikel(Artikel artikel) {
		this.artikel = artikel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "einheit", nullable = false)
	public Mengeneinheit getMengeneinheit() {
		return this.mengeneinheit;
	}

	public void setMengeneinheit(Mengeneinheit mengeneinheit) {
		this.mengeneinheit = mengeneinheit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rezept_fk", nullable = false, insertable = false, updatable = false)
	public Rezept getRezept() {
		return this.rezept;
	}

	public void setRezept(Rezept rezept) {
		this.rezept = rezept;
	}

	@Column(name = "menge", nullable = false, precision = 10, scale = 4)
	public BigDecimal getMenge() {
		return this.menge;
	}

	public void setMenge(BigDecimal menge) {
		this.menge = menge;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((artikel == null) ? 0 : artikel.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((menge == null) ? 0 : menge.hashCode());
		result = prime * result
				+ ((mengeneinheit == null) ? 0 : mengeneinheit.hashCode());
		result = prime * result + ((rezept == null) ? 0 : rezept.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		RezeptHasArtikel other = (RezeptHasArtikel) obj;
		if (artikel == null) {
			if (other.artikel != null)
				return false;
		} else if (!artikel.equals(other.artikel))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (menge == null) {
			if (other.menge != null)
				return false;
		} else if (!menge.equals(other.menge))
			return false;
		if (mengeneinheit == null) {
			if (other.mengeneinheit != null)
				return false;
		} else if (!mengeneinheit.equals(other.mengeneinheit))
			return false;
		if (rezept == null) {
			if (other.rezept != null)
				return false;
		} else if (!rezept.equals(other.rezept))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "RezeptHasArtikel [id=" + id + ", artikel=" + artikel
				+ ", mengeneinheit=" + mengeneinheit + ", rezept=" + rezept
				+ ", menge=" + menge + "]";
	}

}
