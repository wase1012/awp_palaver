package de.bistrosoft.palaver.rezeptverwaltung.domain;

// Generated 21.04.2013 16:08:42 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import de.bistrosoft.palaver.artikelverwaltung.domain.Artikel;
import de.bistrosoft.palaver.artikelverwaltung.domain.Mengeneinheit;

/**
 * RezeptHasArtikel generated by hbm2java
 */
@Entity
@Table(name = "rezept_has_artikel", catalog = "palaver")
public class RezeptHasArtikel implements java.io.Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = -4850668343074296124L;
	private RezeptHasArtikelId id;
	private Artikel artikel;
	private Mengeneinheit mengeneinheit;
	private Zutatenkategorie zutatenkategorie;
	private Rezept rezept;
	private BigDecimal menge;

	public RezeptHasArtikel() {
	}

	public RezeptHasArtikel(RezeptHasArtikelId id, Artikel artikel,
			Mengeneinheit mengeneinheit, Zutatenkategorie zutatenkategorie,
			Rezept rezept, BigDecimal menge) {
		this.id = id;
		this.artikel = artikel;
		this.mengeneinheit = mengeneinheit;
		this.zutatenkategorie = zutatenkategorie;
		this.rezept = rezept;
		this.menge = menge;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "rezeptId", column = @Column(name = "rezept_id", nullable = false)),
			@AttributeOverride(name = "artikelId", column = @Column(name = "artikel_id", nullable = false)) })
	public RezeptHasArtikelId getId() {
		return this.id;
	}

	public void setId(RezeptHasArtikelId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "artikel_id", nullable = false, insertable = false, updatable = false)
	public Artikel getArtikel() {
		return this.artikel;
	}

	public void setArtikel(Artikel artikel) {
		this.artikel = artikel;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "einheit", nullable = false)
	public Mengeneinheit getMengeneinheit() {
		return this.mengeneinheit;
	}

	public void setMengeneinheit(Mengeneinheit mengeneinheit) {
		this.mengeneinheit = mengeneinheit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "zutatenkategorie", nullable = false)
	public Zutatenkategorie getZutatenkategorie() {
		return this.zutatenkategorie;
	}

	public void setZutatenkategorie(Zutatenkategorie zutatenkategorie) {
		this.zutatenkategorie = zutatenkategorie;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rezept_id", nullable = false, insertable = false, updatable = false)
	public Rezept getRezept() {
		return this.rezept;
	}

	public void setRezept(Rezept rezept) {
		this.rezept = rezept;
	}

	@Column(name = "menge", nullable = false, precision = 10, scale = 4)
	public BigDecimal getMenge() {
		return this.menge;
	}

	public void setMenge(BigDecimal menge) {
		this.menge = menge;
	}

}
