package de.bistrosoft.palaver.mitarbeiterverwaltung.domain;

// Generated 21.04.2013 16:08:42 by Hibernate Tools 3.4.0.CR1
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import de.bistrosoft.palaver.nachrichtenverwaltung.domain.Nachricht;

/**
 * Rollen generated by hbm2java
 */
@Entity
@Table(name = "rollen", catalog = "palaver", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
public class Rollen implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7873088826047991256L;
	private Long id;
	private String name;
	private Set<Nachricht> nachrichten = new HashSet<Nachricht>(0);
	private Set<Mitarbeiter> mitarbeiters = new HashSet<Mitarbeiter>(0);

	public Rollen() {
	}

	public Rollen(String name) {
		this.name = name;
	}

	public Rollen(String name, Set<Nachricht> nachrichtens,
			Set<Mitarbeiter> mitarbeiters) {
		this.name = name;
		this.nachrichten = nachrichtens;
		this.mitarbeiters = mitarbeiters;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY)
	public Set<Nachricht> getNachrichten() {
		return this.nachrichten;
	}

	public void setNachrichten(Set<Nachricht> nachrichten) {
		this.nachrichten = nachrichten;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "mitarbeiter_has_rollen", catalog = "palaver", joinColumns = { @JoinColumn(name = "rollen_fk", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "mitarbeiter_fk", nullable = false, updatable = false) })
	public Set<Mitarbeiter> getMitarbeiters() {
		return this.mitarbeiters;
	}

	public void setMitarbeiters(Set<Mitarbeiter> mitarbeiters) {
		this.mitarbeiters = mitarbeiters;
	}

}
